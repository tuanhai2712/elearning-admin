# syntax=docker/dockerfile:experimental
# pull official base image
FROM registry.3si.vn/docker-hub/node:13.12.0-alpine as builder
# set working directory
WORKDIR /app

# add `/app/node_modules/.bin` to $PATH
ENV PATH /app/node_modules/.bin:$PATH

# install app dependencies
COPY ./package.json ./
COPY ./package-lock.json ./
RUN npm install -S
RUN npm audit fix

# Copy all local files into the image
COPY . ./
RUN ls -a
RUN --mount=type=secret,id=auto-devops-build-secrets . /run/secrets/auto-devops-build-secrets && echo -e $ENV_FILE > ./.env.production
RUN cat .env.production

# Build for production
RUN npm run build:prod

# Use nginx image to serve the static files in /build folder
FROM registry.3si.vn/docker-hub/nginx:stable-alpine
# Remove default conf.d of nginx
RUN rm -rf /etc/nginx/conf.d
# Use our own conf (because we use react-router)
COPY .devops/1-build/conf /etc/nginx/
# Copy build's content to HTML serving folder of nginx container
COPY --from=builder /app/build /usr/share/nginx/html
# The nginx is running on port 80, so expose it
EXPOSE 80
# Start Nginx server
CMD ["nginx", "-g", "daemon off;"]
